@use "../base/base" as *;

.header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 3;
    background-color: var(--background-color);
    padding-block: 16px;

    @include laptop {
      padding-block: 32px;
    }
    
    &__wrapper {
        max-width: 1728px;
        margin: 0 auto;
        display: flex;
        align-items: center;
        padding-inline: 16px;
        position: relative;
        
        @include laptop {
          padding-inline: 32px;
        }
    }

    &__burger-group {
        display: flex;
        align-items: center;
        gap: 16px;
        flex-shrink: 0;
    }

    &__menu {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: transparent;
        border: 2px solid var(--color-separator);
        width: 48px;
        height: 48px;
        cursor: pointer;
        z-index: 4;
        position: relative;

        @include laptop {
            @include visually-hidden;
        }

        &-icon,
        &-icon::before,
        &-icon::after {
            content: "";
            display: block;
            height: 2px;
            width: 18px;
            background-color: var(--color-secondary);
            transition: all 0.3s ease;
            position: absolute;
        }

        &-icon::before {
            top: -6px;
        }

        &-icon::after {
            top: 6px;
        }

        // Burger animation when open
        &.is-open .header__menu-icon {
            background-color: transparent;

            &::before {
                transform: rotate(45deg);
                top: 0;
            }

            &::after {
                transform: rotate(-45deg);
                top: 0;
            }
        }
    }

    &__nav-wrapper {
        display: flex;
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        flex-direction: column;
        background-color: var(--background-color);
        padding: 16px;
        z-index: 2;
        gap: 32px;

        // Custom hidden state using [hidden]
        &[hidden] {
            opacity: 0;
            height: 0;
            pointer-events: none;
        }

        // Show when not hidden (JS-controlled)
        &:not([hidden]) {
            opacity: 1;
            height: auto;
            pointer-events: auto;
        }

        @include laptop {
            position: static;
            display: flex;
            flex-direction: row;
            align-items: center;
            gap: 40px;
            padding: 0;
            background-color: transparent;

            // Force visibility even if [hidden] is present
            &[hidden] {
                opacity: 1;
                height: auto;
                pointer-events: auto;
            }

            .search {
                order: 1;
                margin-right: 16px;
            }
        }
    }

    &__actions {
        display: flex;
        align-items: center;
        gap: 16px;
        flex-shrink: 0;
        margin-left: auto;

        &::before {
            display: none;

            @include laptop {
                display: block;
                content: "";
                width: 2px;
                height: 24px;
                background-color: var(--color-separator);
            }
        }
    }
    
    //Header buttons text visibility
    .button__text {
        @include visually-hidden;

        @include laptop {
            @include visually-shown;
        }
    }

    .button--connect .button__text {
        @include tab {
          @include visually-shown;
        }
    }
  }